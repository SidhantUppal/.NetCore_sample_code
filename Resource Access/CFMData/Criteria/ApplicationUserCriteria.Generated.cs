//------------------------------------------------------------------------------
// <autogenerated>
//     
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'ApplicationUser.cs'.
//
//     Template: Criteria.Generated.cst
//     
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;


 

namespace CFMData
{
    [Serializable]
    public partial class ApplicationUserCriteria 
    {
        private readonly Dictionary<string, object> _bag = new Dictionary<string, object>();
        
        #region Constructors

        public ApplicationUserCriteria(){}

        public ApplicationUserCriteria(System.Int32 applicationUserID)
        {
            ApplicationUserID = applicationUserID;
        }

        #endregion

        #region Public Properties

        #region Read-Write

        public System.Int32 ApplicationUserID
        {
            get { return GetValue<System.Int32>("ApplicationUserID"); }
            set { _bag["ApplicationUserID"] = value; }
        }

        public System.String LoginName
        {
            get { return GetValue<System.String>("LoginName"); }
            set { _bag["LoginName"] = value; }
        }

        public System.String Password
        {
            get { return GetValue<System.String>("Password"); }
            set { _bag["Password"] = value; }
        }

        public System.String FirstName
        {
            get { return GetValue<System.String>("FirstName"); }
            set { _bag["FirstName"] = value; }
        }

        public System.String LastName
        {
            get { return GetValue<System.String>("LastName"); }
            set { _bag["LastName"] = value; }
        }

        public System.String EmailAddress
        {
            get { return GetValue<System.String>("EmailAddress"); }
            set { _bag["EmailAddress"] = value; }
        }

        public System.String MobilePhone
        {
            get { return GetValue<System.String>("MobilePhone"); }
            set { _bag["MobilePhone"] = value; }
        }

        public System.String WorkPhone
        {
            get { return GetValue<System.String>("WorkPhone"); }
            set { _bag["WorkPhone"] = value; }
        }

        public System.String EmployeeNumber
        {
            get { return GetValue<System.String>("EmployeeNumber"); }
            set { _bag["EmployeeNumber"] = value; }
        }

        public System.Boolean IsActive
        {
            get { return GetValue<System.Boolean>("IsActive"); }
            set { _bag["IsActive"] = value; }
        }

        public System.Boolean PasswordResetNeeded
        {
            get { return GetValue<System.Boolean>("PasswordResetNeeded"); }
            set { _bag["PasswordResetNeeded"] = value; }
        }

        public System.String PasswordResetToken
        {
            get { return GetValue<System.String>("PasswordResetToken"); }
            set { _bag["PasswordResetToken"] = value; }
        }

        public System.DateTime? PasswordResetTokenExpiry
        {
            get { return GetValue<System.DateTime?>("PasswordResetTokenExpiry"); }
            set { _bag["PasswordResetTokenExpiry"] = value; }
        }

        public System.Boolean MustChangePassword
        {
            get { return GetValue<System.Boolean>("MustChangePassword"); }
            set { _bag["MustChangePassword"] = value; }
        }

        public System.Int32? ApplicationRoleID
        {
            get { return GetValue<System.Int32?>("ApplicationRoleID"); }
            set { _bag["ApplicationRoleID"] = value; }
        }

        public System.DateTime? LastLoggedOn
        {
            get { return GetValue<System.DateTime?>("LastLoggedOn"); }
            set { _bag["LastLoggedOn"] = value; }
        }

        public System.Int32? StatementDeliveryOptionID
        {
            get { return GetValue<System.Int32?>("StatementDeliveryOptionID"); }
            set { _bag["StatementDeliveryOptionID"] = value; }
        }

        public System.Int32? PhysicalAddressID
        {
            get { return GetValue<System.Int32?>("PhysicalAddressID"); }
            set { _bag["PhysicalAddressID"] = value; }
        }

        public System.Boolean SameAsPhysicalAddress
        {
            get { return GetValue<System.Boolean>("SameAsPhysicalAddress"); }
            set { _bag["SameAsPhysicalAddress"] = value; }
        }

        public System.Int32? PostalAddressID
        {
            get { return GetValue<System.Int32?>("PostalAddressID"); }
            set { _bag["PostalAddressID"] = value; }
        }

        public System.DateTime? LastActiveCheckSentOn
        {
            get { return GetValue<System.DateTime?>("LastActiveCheckSentOn"); }
            set { _bag["LastActiveCheckSentOn"] = value; }
        }

        public System.Int32? CreatedBy
        {
            get { return GetValue<System.Int32?>("CreatedBy"); }
            set { _bag["CreatedBy"] = value; }
        }

        public System.DateTime CreatedOn
        {
            get { return GetValue<System.DateTime>("CreatedOn"); }
            set { _bag["CreatedOn"] = value; }
        }

        public System.Int32? UpdatedBy
        {
            get { return GetValue<System.Int32?>("UpdatedBy"); }
            set { _bag["UpdatedBy"] = value; }
        }

        public System.DateTime? UpdatedOn
        {
            get { return GetValue<System.DateTime?>("UpdatedOn"); }
            set { _bag["UpdatedOn"] = value; }
        }

        public System.DateTime? LastPasswordChangedOn
        {
            get { return GetValue<System.DateTime?>("LastPasswordChangedOn"); }
            set { _bag["LastPasswordChangedOn"] = value; }
        }

        #endregion
        
        #region Read-Only

        public bool LastNameHasValue
        {
            get { return _bag.ContainsKey("LastName"); }
        }

        public bool EmailAddressHasValue
        {
            get { return _bag.ContainsKey("EmailAddress"); }
        }

        public bool MobilePhoneHasValue
        {
            get { return _bag.ContainsKey("MobilePhone"); }
        }

        public bool WorkPhoneHasValue
        {
            get { return _bag.ContainsKey("WorkPhone"); }
        }

        public bool EmployeeNumberHasValue
        {
            get { return _bag.ContainsKey("EmployeeNumber"); }
        }

        public bool PasswordResetTokenHasValue
        {
            get { return _bag.ContainsKey("PasswordResetToken"); }
        }

        public bool PasswordResetTokenExpiryHasValue
        {
            get { return _bag.ContainsKey("PasswordResetTokenExpiry"); }
        }

        public bool ApplicationRoleIDHasValue
        {
            get { return _bag.ContainsKey("ApplicationRoleID"); }
        }

        public bool LastLoggedOnHasValue
        {
            get { return _bag.ContainsKey("LastLoggedOn"); }
        }

        public bool StatementDeliveryOptionIDHasValue
        {
            get { return _bag.ContainsKey("StatementDeliveryOptionID"); }
        }

        public bool PhysicalAddressIDHasValue
        {
            get { return _bag.ContainsKey("PhysicalAddressID"); }
        }

        public bool PostalAddressIDHasValue
        {
            get { return _bag.ContainsKey("PostalAddressID"); }
        }

        public bool LastActiveCheckSentOnHasValue
        {
            get { return _bag.ContainsKey("LastActiveCheckSentOn"); }
        }

        public bool CreatedByHasValue
        {
            get { return _bag.ContainsKey("CreatedBy"); }
        }

        public bool UpdatedByHasValue
        {
            get { return _bag.ContainsKey("UpdatedBy"); }
        }

        public bool UpdatedOnHasValue
        {
            get { return _bag.ContainsKey("UpdatedOn"); }
        }

        public bool LastPasswordChangedOnHasValue
        {
            get { return _bag.ContainsKey("LastPasswordChangedOn"); }
        }

        /// <summary>
        /// Returns a list of all the modified properties and values.
        /// </summary>
        public Dictionary<string, object> StateBag
        {
            get
            {
                return _bag;
            }
        }

        /// <summary>
        /// Returns a list of all the modified properties and values.
        /// </summary>
        public string TableFullName
        {
            get
            {
                return "[dbo].[ApplicationUser]";
            }
        }

        #endregion

        #endregion

        #region Overrides
        
        public  string ToString()
        {
            var result = String.Empty;
            var cancel = false;
            
            OnToString(ref result, ref cancel);
            if(cancel && !String.IsNullOrEmpty(result))
                return result;
            
            if (_bag.Count == 0)
                return "No criterion was specified.";

            foreach (KeyValuePair<string, object> key in _bag)
            {
                result += String.Format("[{0}] = '{1}' AND ", key.Key, key.Value);
            }

            return result.Remove(result.Length - 5, 5);
        }

        #endregion

        #region Private Methods
        private T GetValue<T>(string name)
        {
            object value;
            if (_bag.TryGetValue(name, out value))
                return (T) value;
        
            return default(T);
        }
        
        #endregion
        
        #region Partial Methods
        
        partial void OnToString(ref string result, ref bool cancel);
        
        #endregion
        
    }
}
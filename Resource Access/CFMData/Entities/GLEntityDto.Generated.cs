//------------------------------------------------------------------------------
// <autogenerated>
//     
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'GLEntity.cs'.
//
//     Template path: DTO.Generated.cst
//     
// </autogenerated>
//------------------------------------------------------------------------------
using System;


using System.Collections.Generic;
 
namespace CFMData
{
    [Serializable]
    public partial class GLEntityDTO
    {
 #region Contructor(s)

        public GLEntityDTO()
        { /* Require use of factory methods */ }

        #endregion

public GLEntity CopyDTO(GLEntity obj)
		{
			 
			obj.EntityTypeID =this.EntityTypeID ;
			obj.IsActive =this.IsActive ;
			return obj;
		}
        #region Properties

        public System.Int32 GLEntityID { get; set; }
        public System.Int32 EntityTypeID { get; set; }
        public System.Boolean IsActive { get; set; }
        public System.Int32 CreatedBy { get; set; }
        public System.DateTime CreatedOn { get; set; }
        public System.Int32? UpdatedBy { get; set; }
        public System.DateTime? UpdatedOn { get; set; }

	// OneToMany
        public void LoadClients(GLEntity obj)
        {
			if(obj.Clients!=null)
			{
				_clientsProperty=obj.Clients.CurrentDTO;
			}
        }
	// OneToMany
	
        private List<ClientDTO>  _clientsProperty=new List<ClientDTO>();
        public List<ClientDTO> Clients
        {
			get
			{
				return  _clientsProperty;
			}
			
		}
	// OneToMany
        public void LoadFinAdministrators(GLEntity obj)
        {
			if(obj.FinAdministrators!=null)
			{
				_finAdministratorsProperty=obj.FinAdministrators.CurrentDTO;
			}
        }
	// OneToMany
	
        private List<FinAdministratorDTO>  _finAdministratorsProperty=new List<FinAdministratorDTO>();
        public List<FinAdministratorDTO> FinAdministrators
        {
			get
			{
				return  _finAdministratorsProperty;
			}
			
		}
	// ZeroOrOneToMany
        public void LoadGls(GLEntity obj)
        {
			if(obj.Gls!=null)
			{
				_glsProperty=obj.Gls.CurrentDTO;
			}
        }
	// ZeroOrOneToMany
	
        private List<GlDTO>  _glsProperty=new List<GlDTO>();
        public List<GlDTO> Gls
        {
			get
			{
				return  _glsProperty;
			}
			
		}
	// OneToMany
        public void LoadGLAccounts(GLEntity obj)
        {
			if(obj.GLAccounts!=null)
			{
				_gLAccountsProperty=obj.GLAccounts.CurrentDTO;
			}
        }
	// OneToMany
	
        private List<GLAccountDTO>  _gLAccountsProperty=new List<GLAccountDTO>();
        public List<GLAccountDTO> GLAccounts
        {
			get
			{
				return  _gLAccountsProperty;
			}
			
		}
	// OneToMany
        public void LoadHomes(GLEntity obj)
        {
			if(obj.Homes!=null)
			{
				_homesProperty=obj.Homes.CurrentDTO;
			}
        }
	// OneToMany
	
        private List<HomeDTO>  _homesProperty=new List<HomeDTO>();
        public List<HomeDTO> Homes
        {
			get
			{
				return  _homesProperty;
			}
			
		}
	
	
	
	
	
	
        private ApplicationUserDTO  _createdByApplicationUserProperty=null;
        public ApplicationUserDTO CreatedByApplicationUser
        {
			get
			{
				return  _createdByApplicationUserProperty;
			}
			set
			{
				 _createdByApplicationUserProperty=value;
			}
			
		}
        public void LoadCreatedByApplicationUser(GLEntity obj)
		{
			if(obj.CreatedByApplicationUser!=null)
			{
				_createdByApplicationUserProperty=obj.CreatedByApplicationUser.CurrentDTO;
			}
		}
		
		
        private GLEntityTypeDTO  _gLEntityTypeProperty=null;
        public GLEntityTypeDTO GLEntityType
        {
			get
			{
				return  _gLEntityTypeProperty;
			}
			set
			{
				 _gLEntityTypeProperty=value;
			}
			
		}
        public void LoadGLEntityType(GLEntity obj)
		{
			if(obj.GLEntityType!=null)
			{
				_gLEntityTypeProperty=obj.GLEntityType.CurrentDTO;
			}
		}
		
		
        private ApplicationUserDTO  _updatedByApplicationUserProperty=null;
        public ApplicationUserDTO UpdatedByApplicationUser
        {
			get
			{
				return  _updatedByApplicationUserProperty;
			}
			set
			{
				 _updatedByApplicationUserProperty=value;
			}
			
		}
        public void LoadUpdatedByApplicationUser(GLEntity obj)
		{
			if(obj.UpdatedByApplicationUser!=null)
			{
				_updatedByApplicationUserProperty=obj.UpdatedByApplicationUser.CurrentDTO;
			}
		}
		
		
			



        #endregion

    }
}
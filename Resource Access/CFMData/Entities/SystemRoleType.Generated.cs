//------------------------------------------------------------------------------
// <autogenerated>
//     
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'SystemRoleType.cs'.
//
//     Template path: EditableRoot.Generated.cst
//     
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

namespace CFMData
{
    [Serializable]
    public partial class SystemRoleType 
    {
        #region Contructor(s)

        public SystemRoleType()
        { /* Require use of factory methods */ }

        #endregion

			public SystemRoleType  Save()
      {
        if (this.IsNew)
        {
            DataPortal_Insert();
			this.IsNew=false;
        }
        else
        {
            DataPortal_Update();
        }

        return this;
      }
	  
			public bool IsDirty=false;
			public bool IsNew=true;
			#region Properties
		
			private SystemRoleTypeDTO _currentDto = null;
			public SystemRoleTypeDTO CurrentDTO
			{
				get { return _currentDto; }
				set { _currentDto = value; }
			}

			private System.Int32 _systemRoleTypeIDProperty  ;
			public System.Int32 SystemRoleTypeID
			{
				get { return _systemRoleTypeIDProperty; }
				set
				{ 
                 
					if (_systemRoleTypeIDProperty != value){
						IsDirty = true;
					}
					_systemRoleTypeIDProperty=value; 
				}
			}

			private System.Int32 _originalSystemRoleTypeIDProperty ;
			/// <summary>
			/// Holds the original value for SystemRoleTypeID. This is used for non identity primary keys.
			/// </summary>
			internal System.Int32 OriginalSystemRoleTypeID
			{
				get { return _originalSystemRoleTypeIDProperty; }
				set{ _originalSystemRoleTypeIDProperty= value; }
			}

			private System.String _codeProperty  ;
			public System.String Code
			{
				get { return _codeProperty; }
				set
				{ 
                 
					if (_codeProperty != value){
						IsDirty = true;
					}
					_codeProperty=value; 
				}
			}

			private System.String _nameProperty  = null;
			public System.String Name
			{
				get { return _nameProperty; }
				set
				{ 
                 
					if (_nameProperty != value){
						IsDirty = true;
					}
					_nameProperty=value; 
				}
			}

			// OneToMany
			//PropertyInfo<SystemRoleList>
			private bool _systemRolesPropertyChecked = false;
			private SystemRoleList _systemRolesProperty = null;
			public SystemRoleList SystemRoles
			{
				get
				{
					if(!_systemRolesPropertyChecked )
					{
						_systemRolesPropertyChecked =true; 
						var criteria = new CFMData.SystemRoleCriteria {SystemRoleTypeID = SystemRoleTypeID};
						                        
						_systemRolesProperty= CFMData.SystemRoleList.GetBySystemRoleTypeID(SystemRoleTypeID);
 
					}
					return _systemRolesProperty;
				}
			}


        #endregion
		public bool IsChildDirty()
		{
		
		
			 
			if(_systemRolesPropertyChecked)
			{
					if(_systemRolesProperty != null)
					{
						foreach (SystemRole childObj in _systemRolesProperty)
                        {
                            if (childObj.IsDirty || childObj.IsChildDirty())
                            {
                                return true;
                            }
                        }
					}
			}
			 
 



			return false;
		}

        #region Synchronous Factory Methods 

        /// <summary>
        /// Creates a new object of type <see cref="SystemRoleType"/>. 
        /// </summary>
        /// <returns>Returns a newly instantiated collection of type <see cref="SystemRoleType"/>.</returns>    
        public static SystemRoleType NewSystemRoleType()
        {
            SystemRoleType obj=new SystemRoleType();

            return obj;
        }

			public static SystemRoleType GetSystemRoleType(Func<IDataReader, SystemRoleType> rowParser,SqlDataReader reader)
			{
				SystemRoleType obj = rowParser(reader);
				obj.InitDTO();					
				obj.IsDirty = false;
				obj.IsNew = false;
				return obj;
			}
        
 

        /// <summary>
        /// Returns a <see cref="SystemRoleType"/> object of the specified criteria. 
        /// </summary>
        /// <param name="systemRoleTypeID">No additional detail available.</param>
        /// <returns>A <see cref="SystemRoleType"/> object of the specified criteria.</returns>
        public static SystemRoleType GetBySystemRoleTypeID(System.Int32 systemRoleTypeID)
        {
            var criteria = new SystemRoleTypeCriteria {SystemRoleTypeID = systemRoleTypeID};
            
            
          return  new SystemRoleType().DataPortal_Fetch(criteria);
           
        }

        public static void DeleteSystemRoleType(System.Int32 systemRoleTypeID)
        {
            var criteria = new SystemRoleTypeCriteria {SystemRoleTypeID = systemRoleTypeID};
            
            
             new SystemRoleType().DataPortal_Delete(criteria);
        }

        #endregion
 

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="SystemRoleTypeCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(SystemRoleTypeCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been fetched. 
        /// </summary>    
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);
 
        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnInserting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been inserted. 
        /// </summary>
        partial void OnInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object has been deleted. 
        /// </summary>
        partial void OnSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="SystemRoleTypeCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(SystemRoleTypeCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="SystemRoleType"/> object with the specified criteria has been deleted. 
        /// </summary>
        partial void OnDeleted();
        //partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion
        #region ChildPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnChildCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been created. 
        /// </summary>
        partial void OnChildCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="SystemRoleTypeCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnChildFetching(SystemRoleTypeCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been fetched. 
        /// </summary>
        partial void OnChildFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been mapped. 
        /// </summary>
        //partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnChildInserting(ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnChildInserting(SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been inserted. 
        /// </summary>
        partial void OnChildInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnChildUpdating(ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        partial void OnChildUpdating(SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been updated. 
        /// </summary>
        partial void OnChildUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnChildSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnChildSelfDeleting(SqlConnection connection, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object has been deleted. 
        /// </summary>
        partial void OnChildSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="SystemRoleTypeCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        //partial void OnDeleting(SystemRoleTypeCriteria criteria, ref bool cancel);
        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the child <see cref="SystemRoleType"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="SystemRoleTypeCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(SystemRoleTypeCriteria criteria, SqlConnection connection, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="SystemRoleType"/> object with the specified criteria has been deleted. 
        /// </summary>
        //partial void OnDeleted();
        //partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion
   

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the SystemRoleType table in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is an <see cref="SystemRoleType"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static SystemRoleType Exists(SystemRoleTypeCriteria criteria)
        {
			try
			{
					
				return new SystemRoleType().DataPortal_Fetch(criteria);
			}
			catch(Exception ex)
			{
			}
			return null;
			
        }

        
        #endregion

    }
}
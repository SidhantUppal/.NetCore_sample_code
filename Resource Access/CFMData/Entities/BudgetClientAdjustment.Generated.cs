//------------------------------------------------------------------------------
// <autogenerated>
//     
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'BudgetClientAdjustment.cs'.
//
//     Template path: EditableRoot.Generated.cst
//     
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

namespace CFMData
{
    [Serializable]
    public partial class BudgetClientAdjustment 
    {
        #region Contructor(s)

        public BudgetClientAdjustment()
        { /* Require use of factory methods */ }

        #endregion

			public BudgetClientAdjustment  Save()
      {
        if (this.IsNew)
        {
            DataPortal_Insert();
			this.IsNew=false;
        }
        else
        {
            DataPortal_Update();
        }

        return this;
      }
	  
			public bool IsDirty=false;
			public bool IsNew=true;
			#region Properties
		
			private BudgetClientAdjustmentDTO _currentDto = null;
			public BudgetClientAdjustmentDTO CurrentDTO
			{
				get { return _currentDto; }
				set { _currentDto = value; }
			}

			private System.Int32 _budgetClientAdjustmentIDProperty  ;
			public System.Int32 BudgetClientAdjustmentID
			{
				get { return _budgetClientAdjustmentIDProperty; }
				set
				{ 
                 
					if (_budgetClientAdjustmentIDProperty != value){
						IsDirty = true;
					}
					_budgetClientAdjustmentIDProperty=value; 
				}
			}

			private System.Int32 _budgetIDProperty  ;
			public System.Int32 BudgetID
			{
				get { return _budgetIDProperty; }
				set
				{ 
                 
					if (_budgetIDProperty != value){
						IsDirty = true;
					}
					_budgetIDProperty=value; 
				}
			}

			private System.Int32 _categoryIDProperty  ;
			public System.Int32 CategoryID
			{
				get { return _categoryIDProperty; }
				set
				{ 
                 
					if (_categoryIDProperty != value){
						IsDirty = true;
					}
					_categoryIDProperty=value; 
				}
			}

			private System.Int32 _homeClientIDProperty  ;
			public System.Int32 HomeClientID
			{
				get { return _homeClientIDProperty; }
				set
				{ 
                 
					if (_homeClientIDProperty != value){
						IsDirty = true;
					}
					_homeClientIDProperty=value; 
				}
			}

			private System.Decimal _adjustmentAmountProperty  ;
			public System.Decimal AdjustmentAmount
			{
				get { return _adjustmentAmountProperty; }
				set
				{ 
                 
					if (_adjustmentAmountProperty != value){
						IsDirty = true;
					}
					_adjustmentAmountProperty=value; 
				}
			}

			private System.DateTime _startDateProperty  ;
			public System.DateTime StartDate
			{
				get { return _startDateProperty; }
				set
				{ 
                 
					if (_startDateProperty != value){
						IsDirty = true;
					}
					_startDateProperty=value; 
				}
			}

			private System.Boolean _isActiveProperty  ;
			public System.Boolean IsActive
			{
				get { return _isActiveProperty; }
				set
				{ 
                 
					if (_isActiveProperty != value){
						IsDirty = true;
					}
					_isActiveProperty=value; 
				}
			}

			private System.Int32 _createdByProperty  ;
			public System.Int32 CreatedBy
			{
				get { return _createdByProperty; }
				set
				{ 
                 
					if (_createdByProperty != value){
						IsDirty = true;
					}
					_createdByProperty=value; 
				}
			}

			private System.DateTime _createdOnProperty  ;
			public System.DateTime CreatedOn
			{
				get { return _createdOnProperty; }
				set
				{ 
                 
					if (_createdOnProperty != value){
						IsDirty = true;
					}
					_createdOnProperty=value; 
				}
			}

			private System.Int32? _updatedByProperty  = null;
			public System.Int32? UpdatedBy
			{
				get { return _updatedByProperty; }
				set
				{ 
                 
					if (_updatedByProperty != value){
						IsDirty = true;
					}
					_updatedByProperty=value; 
				}
			}

			private System.DateTime? _updatedOnProperty  = null;
			public System.DateTime? UpdatedOn
			{
				get { return _updatedOnProperty; }
				set
				{ 
                 
					if (_updatedOnProperty != value){
						IsDirty = true;
					}
					_updatedOnProperty=value; 
				}
			}

			// ManyToOne
			private bool _budgetPropertyChecked = false;
			private Budget _budgetProperty = null;
			public Budget Budget
			{
				get
				{
					if(!_budgetPropertyChecked)
					{						
						var criteria = new CFMData.BudgetCriteria {BudgetID = BudgetID};
						
						_budgetPropertyChecked=true;                       
						_budgetProperty= CFMData.Budget.GetByBudgetID(BudgetID);
					}                
					return _budgetProperty;
				}
			}

			// ManyToOne
			private bool _budgetLineCategoryPropertyChecked = false;
			private BudgetLineCategory _budgetLineCategoryProperty = null;
			public BudgetLineCategory BudgetLineCategory
			{
				get
				{
					if(!_budgetLineCategoryPropertyChecked)
					{						
						var criteria = new CFMData.BudgetLineCategoryCriteria {BudgetLineCategoryID = CategoryID};
						
						_budgetLineCategoryPropertyChecked=true;                       
						_budgetLineCategoryProperty= CFMData.BudgetLineCategory.GetByBudgetLineCategoryID(CategoryID);
					}                
					return _budgetLineCategoryProperty;
				}
			}

			// ManyToOne
			private bool _homeClientPropertyChecked = false;
			private HomeClient _homeClientProperty = null;
			public HomeClient HomeClient
			{
				get
				{
					if(!_homeClientPropertyChecked)
					{						
						var criteria = new CFMData.HomeClientCriteria {HomeClientID = HomeClientID};
						
						_homeClientPropertyChecked=true;                       
						_homeClientProperty= CFMData.HomeClient.GetByHomeClientID(HomeClientID);
					}                
					return _homeClientProperty;
				}
			}


        #endregion
		public bool IsChildDirty()
		{
		
		


			return false;
		}

        #region Synchronous Factory Methods 

        /// <summary>
        /// Creates a new object of type <see cref="BudgetClientAdjustment"/>. 
        /// </summary>
        /// <returns>Returns a newly instantiated collection of type <see cref="BudgetClientAdjustment"/>.</returns>    
        public static BudgetClientAdjustment NewBudgetClientAdjustment()
        {
            BudgetClientAdjustment obj=new BudgetClientAdjustment();

            return obj;
        }

			public static BudgetClientAdjustment GetBudgetClientAdjustment(Func<IDataReader, BudgetClientAdjustment> rowParser,SqlDataReader reader)
			{
				BudgetClientAdjustment obj = rowParser(reader);
				obj.InitDTO();					
				obj.IsDirty = false;
				obj.IsNew = false;
				return obj;
			}
        
 

        /// <summary>
        /// Returns a <see cref="BudgetClientAdjustment"/> object of the specified criteria. 
        /// </summary>
        /// <param name="budgetClientAdjustmentID">No additional detail available.</param>
        /// <returns>A <see cref="BudgetClientAdjustment"/> object of the specified criteria.</returns>
        public static BudgetClientAdjustment GetByBudgetClientAdjustmentID(System.Int32 budgetClientAdjustmentID)
        {
            var criteria = new BudgetClientAdjustmentCriteria {BudgetClientAdjustmentID = budgetClientAdjustmentID};
            
            
          return  new BudgetClientAdjustment().DataPortal_Fetch(criteria);
           
        }

        /// <summary>
        /// Returns a <see cref="BudgetClientAdjustment"/> object of the specified criteria. 
        /// </summary>
        /// <param name="budgetID">No additional detail available.</param>
        /// <returns>A <see cref="BudgetClientAdjustment"/> object of the specified criteria.</returns>
        public static BudgetClientAdjustment GetByBudgetID(System.Int32 budgetID)
        {
            var criteria = new BudgetClientAdjustmentCriteria {BudgetID = budgetID};
            
            
          return  new BudgetClientAdjustment().DataPortal_Fetch(criteria);
           
        }

        /// <summary>
        /// Returns a <see cref="BudgetClientAdjustment"/> object of the specified criteria. 
        /// </summary>
        /// <param name="categoryID">No additional detail available.</param>
        /// <returns>A <see cref="BudgetClientAdjustment"/> object of the specified criteria.</returns>
        public static BudgetClientAdjustment GetByCategoryID(System.Int32 categoryID)
        {
            var criteria = new BudgetClientAdjustmentCriteria {CategoryID = categoryID};
            
            
          return  new BudgetClientAdjustment().DataPortal_Fetch(criteria);
           
        }

        /// <summary>
        /// Returns a <see cref="BudgetClientAdjustment"/> object of the specified criteria. 
        /// </summary>
        /// <param name="homeClientID">No additional detail available.</param>
        /// <returns>A <see cref="BudgetClientAdjustment"/> object of the specified criteria.</returns>
        public static BudgetClientAdjustment GetByHomeClientID(System.Int32 homeClientID)
        {
            var criteria = new BudgetClientAdjustmentCriteria {HomeClientID = homeClientID};
            
            
          return  new BudgetClientAdjustment().DataPortal_Fetch(criteria);
           
        }

        public static void DeleteBudgetClientAdjustment(System.Int32 budgetClientAdjustmentID)
        {
            var criteria = new BudgetClientAdjustmentCriteria {BudgetClientAdjustmentID = budgetClientAdjustmentID};
            
            
             new BudgetClientAdjustment().DataPortal_Delete(criteria);
        }

        #endregion
 

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BudgetClientAdjustmentCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(BudgetClientAdjustmentCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been fetched. 
        /// </summary>    
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);
 
        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnInserting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been inserted. 
        /// </summary>
        partial void OnInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object has been deleted. 
        /// </summary>
        partial void OnSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BudgetClientAdjustmentCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(BudgetClientAdjustmentCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BudgetClientAdjustment"/> object with the specified criteria has been deleted. 
        /// </summary>
        partial void OnDeleted();
        //partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion
        #region ChildPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnChildCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been created. 
        /// </summary>
        partial void OnChildCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BudgetClientAdjustmentCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnChildFetching(BudgetClientAdjustmentCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been fetched. 
        /// </summary>
        partial void OnChildFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        //partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been mapped. 
        /// </summary>
        //partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnChildInserting(ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnChildInserting(SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        partial void OnChildInserting(Budget budget, BudgetLineCategory budgetLineCategory, HomeClient homeClient, SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been inserted. 
        /// </summary>
        partial void OnChildInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnChildUpdating(ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        partial void OnChildUpdating(SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnChildUpdating(Budget budget, BudgetLineCategory budgetLineCategory, HomeClient homeClient, SqlConnection connection, ref bool cancel,SqlTransaction trans);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been updated. 
        /// </summary>
        partial void OnChildUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnChildSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnChildSelfDeleting(SqlConnection connection, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object has been deleted. 
        /// </summary>
        partial void OnChildSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BudgetClientAdjustmentCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        //partial void OnDeleting(BudgetClientAdjustmentCriteria criteria, ref bool cancel);
        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the child <see cref="BudgetClientAdjustment"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BudgetClientAdjustmentCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="connection"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(BudgetClientAdjustmentCriteria criteria, SqlConnection connection, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BudgetClientAdjustment"/> object with the specified criteria has been deleted. 
        /// </summary>
        //partial void OnDeleted();
        //partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion
   

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the BudgetClientAdjustment table in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is an <see cref="BudgetClientAdjustment"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static BudgetClientAdjustment Exists(BudgetClientAdjustmentCriteria criteria)
        {
			try
			{
					
				return new BudgetClientAdjustment().DataPortal_Fetch(criteria);
			}
			catch(Exception ex)
			{
			}
			return null;
			
        }

        
        #endregion

    }
}